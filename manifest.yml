version: 1.1
type: update
categories:
- apps/dev-tools
id: cdn
baseUrl: https://raw.githubusercontent.com/edgeport/cdn/master
name: HTTP/3 Premium CDN
logo: /images/edgeport-blue-logo-70x70.png
homepage: https://edgeport.net
description:
  short: Enterprise-level HTTP-over-QUIC CDN

targetNodes:
  nodeGroup:
    - bl
    - cp
    
onBeforeInit: |
  var resp = jelastic.dev.scripting.Eval("c05ffa5b45628a2a0c95467ebca8a0b4", session, "cdn.wizard.ui");            
  return resp.response ? resp.response:resp;
  
globals:
  valueRR: RR
  valuePF: PF
  appid: c05ffa5b45628a2a0c95467ebca8a0b4
  #appName: CDN EdgePort Service  
  
buttons:    

  - settings: config
    action: config
    caption: Configure
    submitButtonText: Apply  

menu:  
  - caption: Purge
    confirmText: Are you sure?
    loadingText: We are purging your files
    action: purgeSingle
    successText: Purge was successfully!
    settings: purge
    title: Purge
    submitButtonText: Submit

  - caption: Purge All
    confirmText: Are you sure?
    loadingText: We are purging your files
    action: purge
    successText: Purge was successfully!
    title: Purge All
    submitButtonText: Submit
 
onInstall: 
  - eval:
      act: install
  - if ("${settings.masterEnv:}"): 
      setGlobals: 
        envName: ${settings.masterEnv:}
  - if (!"${settings.masterEnv:}"): 
      setGlobals: 
        envName: ${env.envName}
    
onAfterScaleOut:
  scale: ${event.params.nodeGroup}

onAfterScaleIn:
  scale: ${event.params.nodeGroup}

onAfterMigrate:
  eval:
    act: migrate

onAfterClone:  
  - script: delete MANIFEST.id; return {result:0, jps:MANIFEST};
  - install[${targetNodes.nodeGroup}]: ${response.jps}
    envName: ${event.response.env.envName}    
    settings: ${settings.toJSON()}

onBeforeDelete: cdnUninstall
onUninstall: cdnUninstall

actions:
  scale:
    if ('${this}' == 'bl' || ('${this}' == 'cp' && !nodes.bl)): 
      eval:
        act: scale    

  eval:
    script: |-
        var params = {masterEnv:"${settings.masterEnv:}", envName:"${env.envName}", action:"${this.act:script}", ha:"${settings.ha:}", header:"${settings.header:}", customCname:"${settings.customCname:}", path:"${this.path:}", note:"${settings.note:}"},
            resp = jelastic.dev.scripting.Eval("${globals.appid}", session, "cdn.${this.script:install}", params);            
        return resp.response ? resp.response:resp;      

  #TODO: send message to owner after change SSL option, strore in DB for charging job
  config:
    eval:
      act: config             

  purgeSingle:
    purge: ${settings.purgefile}
      
  purge:
    eval: 
      script: purge
      path: ${this:}
          
  cdnUninstall:
    eval: 
      script: uninstall          

success: /text/success.md
